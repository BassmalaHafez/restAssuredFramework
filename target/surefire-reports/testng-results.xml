<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="10" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="8886" started-at="2022-06-12T11:16:50Z" finished-at="2022-06-12T11:16:59Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="8886" started-at="2022-06-12T11:16:50Z" finished-at="2022-06-12T11:16:59Z">
      <class name="com.chefaa.bestbuy.test.GetProductsTest">
        <test-method status="FAIL" signature="testProductsCountIsValid()[pri:1, instance:com.chefaa.bestbuy.test.GetProductsTest@4d1b0d2a]" name="testProductsCountIsValid" duration-ms="2066" started-at="2022-06-12T11:16:56Z" finished-at="2022-06-12T11:16:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path total doesn't match.
Expected: <51976>
  Actual: <51985>
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path total doesn't match.
Expected: <51976>
  Actual: <51985>

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.chefaa.bestbuy.test.GetProductsTest.testProductsCountIsValid(GetProductsTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductsCountIsValid -->
        <test-method status="PASS" signature="testProductsCountWithLimitIsValid()[pri:1, instance:com.chefaa.bestbuy.test.GetProductsTest@4d1b0d2a]" name="testProductsCountWithLimitIsValid" duration-ms="521" started-at="2022-06-12T11:16:58Z" finished-at="2022-06-12T11:16:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductsCountWithLimitIsValid -->
        <test-method status="PASS" signature="testResoponseIsOk()[pri:1, instance:com.chefaa.bestbuy.test.GetProductsTest@4d1b0d2a]" name="testResoponseIsOk" duration-ms="313" started-at="2022-06-12T11:16:59Z" finished-at="2022-06-12T11:16:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResoponseIsOk -->
      </class> <!-- com.chefaa.bestbuy.test.GetProductsTest -->
      <class name="com.chefaa.bestbuy.test.UpdateProductTest">
        <test-method status="PASS" signature="updateInValidProduct()[pri:0, instance:com.chefaa.bestbuy.test.UpdateProductTest@954b04f]" name="updateInValidProduct" duration-ms="78" started-at="2022-06-12T11:16:56Z" finished-at="2022-06-12T11:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateInValidProduct -->
        <test-method status="PASS" signature="updateProductSucceeds()[pri:0, instance:com.chefaa.bestbuy.test.UpdateProductTest@954b04f]" name="updateProductSucceeds" duration-ms="288" started-at="2022-06-12T11:16:56Z" finished-at="2022-06-12T11:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateProductSucceeds -->
      </class> <!-- com.chefaa.bestbuy.test.UpdateProductTest -->
      <class name="com.chefaa.bestbuy.test.GetProducrByIdTest">
        <test-method status="PASS" signature="getProductByIdSucceeds()[pri:0, instance:com.chefaa.bestbuy.test.GetProducrByIdTest@5c072e3f]" name="getProductByIdSucceeds" duration-ms="109" started-at="2022-06-12T11:16:56Z" finished-at="2022-06-12T11:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProductByIdSucceeds -->
      </class> <!-- com.chefaa.bestbuy.test.GetProducrByIdTest -->
      <class name="com.chefaa.bestbuy.test.DeleteProductTest">
        <test-method status="PASS" signature="testDeleteProduct()[pri:0, instance:com.chefaa.bestbuy.test.DeleteProductTest@47db50c5]" name="testDeleteProduct" duration-ms="126" started-at="2022-06-12T11:16:56Z" finished-at="2022-06-12T11:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct -->
        <test-method status="PASS" signature="testInValidDeleteProduct()[pri:0, instance:com.chefaa.bestbuy.test.DeleteProductTest@47db50c5]" name="testInValidDeleteProduct" duration-ms="29" started-at="2022-06-12T11:16:56Z" finished-at="2022-06-12T11:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInValidDeleteProduct -->
      </class> <!-- com.chefaa.bestbuy.test.DeleteProductTest -->
      <class name="com.chefaa.bestbuy.test.CreateProductTest">
        <test-method status="PASS" signature="testCreateInvalidProductFails()[pri:0, instance:com.chefaa.bestbuy.test.CreateProductTest@67b467e9]" name="testCreateInvalidProductFails" duration-ms="3469" started-at="2022-06-12T11:16:50Z" finished-at="2022-06-12T11:16:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateInvalidProductFails -->
        <test-method status="PASS" signature="testCreateValidProductSucceeds()[pri:0, instance:com.chefaa.bestbuy.test.CreateProductTest@67b467e9]" name="testCreateValidProductSucceeds" duration-ms="1804" started-at="2022-06-12T11:16:54Z" finished-at="2022-06-12T11:16:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateValidProductSucceeds -->
      </class> <!-- com.chefaa.bestbuy.test.CreateProductTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
